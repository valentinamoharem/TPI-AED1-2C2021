        -:    0:Source:c:/mingw/lib/gcc/mingw32/6.3.0/include/c++/bits/stl_construct.h
        -:    0:Graph:C:\Users\valum\Documents\GitHub\TPI-AED1-2C2021\cmake-build-debug-coverage\CMakeFiles\tpi.dir\auxiliares.gcno
        -:    0:Data:C:\Users\valum\Documents\GitHub\TPI-AED1-2C2021\cmake-build-debug-coverage\CMakeFiles\tpi.dir\auxiliares.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// nonstandard construct and destroy functions -*- C++ -*-
        -:    2:
        -:    3:// Copyright (C) 2001-2016 Free Software Foundation, Inc.
        -:    4://
        -:    5:// This file is part of the GNU ISO C++ Library.  This library is free
        -:    6:// software; you can redistribute it and/or modify it under the
        -:    7:// terms of the GNU General Public License as published by the
        -:    8:// Free Software Foundation; either version 3, or (at your option)
        -:    9:// any later version.
        -:   10:
        -:   11:// This library is distributed in the hope that it will be useful,
        -:   12:// but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   13:// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   14:// GNU General Public License for more details.
        -:   15:
        -:   16:// Under Section 7 of GPL version 3, you are granted additional
        -:   17:// permissions described in the GCC Runtime Library Exception, version
        -:   18:// 3.1, as published by the Free Software Foundation.
        -:   19:
        -:   20:// You should have received a copy of the GNU General Public License and
        -:   21:// a copy of the GCC Runtime Library Exception along with this program;
        -:   22:// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
        -:   23:// <http://www.gnu.org/licenses/>.
        -:   24:
        -:   25:/*
        -:   26: *
        -:   27: * Copyright (c) 1994
        -:   28: * Hewlett-Packard Company
        -:   29: *
        -:   30: * Permission to use, copy, modify, distribute and sell this software
        -:   31: * and its documentation for any purpose is hereby granted without fee,
        -:   32: * provided that the above copyright notice appear in all copies and
        -:   33: * that both that copyright notice and this permission notice appear
        -:   34: * in supporting documentation.  Hewlett-Packard Company makes no
        -:   35: * representations about the suitability of this software for any
        -:   36: * purpose.  It is provided "as is" without express or implied warranty.
        -:   37: *
        -:   38: *
        -:   39: * Copyright (c) 1996,1997
        -:   40: * Silicon Graphics Computer Systems, Inc.
        -:   41: *
        -:   42: * Permission to use, copy, modify, distribute and sell this software
        -:   43: * and its documentation for any purpose is hereby granted without fee,
        -:   44: * provided that the above copyright notice appear in all copies and
        -:   45: * that both that copyright notice and this permission notice appear
        -:   46: * in supporting documentation.  Silicon Graphics makes no
        -:   47: * representations about the suitability of this software for any
        -:   48: * purpose.  It is provided "as is" without express or implied warranty.
        -:   49: */
        -:   50:
        -:   51:/** @file bits/stl_construct.h
        -:   52: *  This is an internal header file, included by other library headers.
        -:   53: *  Do not attempt to use it directly. @headername{memory}
        -:   54: */
        -:   55:
        -:   56:#ifndef _STL_CONSTRUCT_H
        -:   57:#define _STL_CONSTRUCT_H 1
        -:   58:
        -:   59:#include <new>
        -:   60:#include <bits/move.h>
        -:   61:#include <ext/alloc_traits.h>
        -:   62:
        -:   63:namespace std _GLIBCXX_VISIBILITY(default)
        -:   64:{
        -:   65:_GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:   66:
        -:   67:  /**
        -:   68:   * Constructs an object in existing memory by invoking an allocated
        -:   69:   * object's constructor with an initializer.
        -:   70:   */
        -:   71:#if __cplusplus >= 201103L
        -:   72:  template<typename _T1, typename... _Args>
        -:   73:    inline void
function _ZSt10_ConstructISt6vectorIS0_IiSaIiEESaIS2_EEJS4_EEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
function _ZSt10_ConstructISt6vectorIiSaIiEEJS2_EEvPT_DpOT0_ called 13567 returned 100% blocks executed 86%
function _ZSt10_ConstructISt6vectorIiSaIiEEJRS2_EEvPT_DpOT0_ called 0 returned 0% blocks executed 0%
function _ZSt10_ConstructISt6vectorIiSaIiEEJRKS2_EEvPT_DpOT0_ called 62231495 returned 100% blocks executed 78%
 62245062:   74:    _Construct(_T1* __p, _Args&&... __args)
    $$$$$:   74-block  0
    13567:   74-block  1
    $$$$$:   74-block  2
 62231495:   74-block  3
 62245062:   75:    { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
    $$$$$:   75-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    $$$$$:   75-block  1
call    4 never executed
    $$$$$:   75-block  2
    13567:   75-block  3
call    5 returned 13567
call    6 returned 13567
branch  7 taken 13567 (fallthrough)
branch  8 taken 0
    13567:   75-block  4
call    9 returned 13567
    $$$$$:   75-block  5
    $$$$$:   75-block  6
call   10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
    $$$$$:   75-block  7
call   14 never executed
branch 15 never executed
branch 16 never executed
    $$$$$:   75-block  8
    $$$$$:   75-block  9
    $$$$$:   75-block 10
    %%%%%:   75-block 11
call   17 never executed
 62231495:   75-block 12
call   18 returned 62231495
call   19 returned 62231495
branch 20 taken 62231495 (fallthrough)
branch 21 taken 0
 62231495:   75-block 13
call   22 returned 62231495
branch 23 taken 62231495 (fallthrough)
branch 24 taken 0 (throw)
 62231495:   75-block 14
    $$$$$:   75-block 15
 62231495:   75-block 16
    %%%%%:   75-block 17
call   25 never executed
        -:   76:#else
        -:   77:  template<typename _T1, typename _T2>
        -:   78:    inline void
        -:   79:    _Construct(_T1* __p, const _T2& __value)
        -:   80:    {
        -:   81:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:   82:      // 402. wrong new expression in [some_]allocator::construct
        -:   83:      ::new(static_cast<void*>(__p)) _T1(__value);
        -:   84:    }
        -:   85:#endif
        -:   86:
        -:   87:  /**
        -:   88:   * Destroy the object pointed to by a pointer type.
        -:   89:   */
        -:   90:  template<typename _Tp>
        -:   91:    inline void
function _ZSt8_DestroyISt6vectorIS0_IiSaIiEESaIS2_EEEvPT_ called 0 returned 0% blocks executed 0%
function _ZSt8_DestroyISt6vectorIiSaIiEEEvPT_ called 62255253 returned 100% blocks executed 100%
 62255253:   92:    _Destroy(_Tp* __pointer)
    $$$$$:   92-block  0
 62255253:   92-block  1
 62255253:   93:    { __pointer->~_Tp(); }
    $$$$$:   93-block  0
call    0 never executed
 62255253:   93-block  1
call    1 returned 62255253
        -:   94:
        -:   95:  template<bool>
        -:   96:    struct _Destroy_aux
        -:   97:    {
        -:   98:      template<typename _ForwardIterator>
        -:   99:        static void
function _ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIS2_IiSaIiEESaIS4_EEEEvT_S8_ called 0 returned 0% blocks executed 0%
function _ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES4_IS6_SaIS6_EEEEEEvT_SB_ called 4 returned 100% blocks executed 100%
function _ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_ called 218888 returned 100% blocks executed 100%
   218892:  100:        __destroy(_ForwardIterator __first, _ForwardIterator __last)
    $$$$$:  100-block  0
        4:  100-block  1
   218888:  100-block  2
        -:  101:	{
 62474145:  102:	  for (; __first != __last; ++__first)
    $$$$$:  102-block  0
branch  0 never executed
branch  1 never executed
       12:  102-block  1
call    2 returned 12
branch  3 taken 8 (fallthrough)
branch  4 taken 4
call    5 returned 8
 62474133:  102-block  2
branch  6 taken 62255245 (fallthrough)
branch  7 taken 218888
 62255253:  103:	    std::_Destroy(std::__addressof(*__first));
    $$$$$:  103-block  0
call    0 never executed
call    1 never executed
        8:  103-block  1
call    2 returned 8
call    3 returned 8
call    4 returned 8
 62255245:  103-block  2
call    5 returned 62255245
call    6 returned 62255245
   218892:  104:	}
        -:  105:    };
        -:  106:
        -:  107:  template<>
        -:  108:    struct _Destroy_aux<true>
        -:  109:    {
        -:  110:      template<typename _ForwardIterator>
        -:  111:        static void
function _ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEEvT_S9_ called 107 returned 100% blocks executed 100%
function _ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ called 99395413 returned 100% blocks executed 100%
 99395520:  112:        __destroy(_ForwardIterator, _ForwardIterator) { }
      107:  112-block  0
 99395413:  112-block  1
        -:  113:    };
        -:  114:
        -:  115:  /**
        -:  116:   * Destroy a range of objects.  If the value_type of the object has
        -:  117:   * a trivial destructor, the compiler should optimize all of this
        -:  118:   * away, otherwise the objects' destructors must be invoked.
        -:  119:   */
        -:  120:  template<typename _ForwardIterator>
        -:  121:    inline void
function _ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_ called 107 returned 100% blocks executed 100%
function _ZSt8_DestroyIPSt6vectorIS0_IiSaIiEESaIS2_EEEvT_S6_ called 0 returned 0% blocks executed 0%
function _ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES2_IS4_SaIS4_EEEEEvT_S9_ called 4 returned 100% blocks executed 100%
function _ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_ called 218888 returned 100% blocks executed 100%
function _ZSt8_DestroyIPiEvT_S1_ called 99395413 returned 100% blocks executed 100%
 99614412:  122:    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
      107:  122-block  0
    $$$$$:  122-block  1
        4:  122-block  2
   218888:  122-block  3
 99395413:  122-block  4
        -:  123:    {
        -:  124:      typedef typename iterator_traits<_ForwardIterator>::value_type
        -:  125:                       _Value_type;
 99614412:  126:      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
      107:  126-block  0
call    0 returned 107
    $$$$$:  126-block  1
call    1 never executed
        4:  126-block  2
call    2 returned 4
   218888:  126-block  3
call    3 returned 218888
 99395413:  126-block  4
call    4 returned 99395413
        -:  127:	__destroy(__first, __last);
 99614412:  128:    }
        -:  129:
        -:  130:  /**
        -:  131:   * Destroy a range of objects using the supplied allocator.  For
        -:  132:   * nondefault allocators we do not optimize away invocation of 
        -:  133:   * destroy() even if _Tp has a trivial destructor.
        -:  134:   */
        -:  135:
        -:  136:  template<typename _ForwardIterator, typename _Allocator>
        -:  137:    void
        -:  138:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
        -:  139:	     _Allocator& __alloc)
        -:  140:    {
        -:  141:      typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
        -:  142:      for (; __first != __last; ++__first)
        -:  143:	__traits::destroy(__alloc, std::__addressof(*__first));
        -:  144:    }
        -:  145:
        -:  146:  template<typename _ForwardIterator, typename _Tp>
        -:  147:    inline void
function _ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RSaIT0_E called 107 returned 100% blocks executed 100%
function _ZSt8_DestroyIPSt6vectorIS0_IiSaIiEESaIS2_EES4_EvT_S6_RSaIT0_E called 0 returned 0% blocks executed 0%
function _ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIiSaIiEES2_IS4_SaIS4_EEEES4_EvT_S9_RSaIT0_E called 4 returned 100% blocks executed 100%
function _ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E called 218888 returned 100% blocks executed 100%
function _ZSt8_DestroyIPiiEvT_S1_RSaIT0_E called 99395413 returned 100% blocks executed 100%
 99614412:  148:    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
      107:  148-block  0
    $$$$$:  148-block  1
        4:  148-block  2
   218888:  148-block  3
 99395413:  148-block  4
        -:  149:	     allocator<_Tp>&)
        -:  150:    {
 99614412:  151:      _Destroy(__first, __last);
      107:  151-block  0
call    0 returned 107
    $$$$$:  151-block  1
call    1 never executed
        4:  151-block  2
call    2 returned 4
   218888:  151-block  3
call    3 returned 218888
 99395413:  151-block  4
call    4 returned 99395413
 99614412:  152:    }
        -:  153:
        -:  154:_GLIBCXX_END_NAMESPACE_VERSION
        -:  155:} // namespace std
        -:  156:
        -:  157:#endif /* _STL_CONSTRUCT_H */
        -:  158:
