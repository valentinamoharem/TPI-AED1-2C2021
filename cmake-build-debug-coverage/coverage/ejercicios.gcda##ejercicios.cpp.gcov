        -:    0:Source:C:/Users/valum/Documents/GitHub/TPI-AED1-2C2021/ejercicios.cpp
        -:    0:Graph:C:\Users\valum\Documents\GitHub\TPI-AED1-2C2021\cmake-build-debug-coverage\CMakeFiles\tpi.dir\ejercicios.gcno
        -:    0:Data:C:\Users\valum\Documents\GitHub\TPI-AED1-2C2021\cmake-build-debug-coverage\CMakeFiles\tpi.dir\ejercicios.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "ejercicios.h"
        -:    2:#include "auxiliares.h"
        -:    3:#include "definiciones.h"
        -:    4:
        -:    5:using namespace std;
        -:    6:// Implementacion Problema 1
function _Z16esEncuestaValidaSt6vectorIS_IiSaIiEESaIS1_EES3_ called 38 returned 100% blocks executed 59%
       38:    7:bool esEncuestaValida ( eph_h th, eph_i ti ) {
       38:    7-block  0
      152:    8:    return !esVacia(ti) && !esVacia(th) && esMatriz(ti) && esMatriz(th) && cantidadCorrectaDeColumnasI(ti)
       38:    8-block  0
call    0 returned 38
branch  1 taken 38 (fallthrough)
branch  2 taken 0 (throw)
       38:    8-block  1
call    3 returned 38
branch  4 taken 38 (fallthrough)
branch  5 taken 0 (throw)
       38:    8-block  2
call    6 returned 38
branch  7 taken 38 (fallthrough)
branch  8 taken 0 (throw)
       38:    8-block  3
call    9 returned 38
branch 10 taken 38 (fallthrough)
branch 11 taken 0 (throw)
       38:    8-block  4
branch 12 taken 37 (fallthrough)
branch 13 taken 1
       37:    8-block  5
call   14 returned 37
branch 15 taken 37 (fallthrough)
branch 16 taken 0 (throw)
       37:    8-block  6
call   17 returned 37
branch 18 taken 37 (fallthrough)
branch 19 taken 0 (throw)
       37:    8-block  7
branch 20 taken 36 (fallthrough)
branch 21 taken 1
       36:    8-block  8
call   22 returned 36
branch 23 taken 36 (fallthrough)
branch 24 taken 0 (throw)
       36:    8-block  9
call   25 returned 36
branch 26 taken 36 (fallthrough)
branch 27 taken 0 (throw)
       36:    8-block 10
branch 28 taken 36 (fallthrough)
branch 29 taken 0
       36:    8-block 11
call   30 returned 36
branch 31 taken 36 (fallthrough)
branch 32 taken 0 (throw)
       36:    8-block 12
call   33 returned 36
branch 34 taken 36 (fallthrough)
branch 35 taken 0 (throw)
       36:    8-block 13
branch 36 taken 36 (fallthrough)
branch 37 taken 0
       38:    8-block 14
branch 38 taken 36 (fallthrough)
branch 39 taken 2
       36:    8-block 15
call   40 returned 36
       38:    8-block 16
branch 41 taken 36 (fallthrough)
branch 42 taken 2
       36:    8-block 17
call   43 returned 36
       38:    8-block 18
branch 44 taken 37 (fallthrough)
branch 45 taken 1
       37:    8-block 19
call   46 returned 37
       38:    8-block 20
branch 47 taken 38 (fallthrough)
branch 48 taken 0
       38:    8-block 21
call   49 returned 38
       38:    8-block 22
branch 50 taken 0 (fallthrough)
branch 51 taken 38
       38:    8-block 23
call   52 returned 38
       38:    8-block 24
    %%%%%:    8-block 25
branch 53 never executed
branch 54 never executed
    %%%%%:    8-block 26
call   55 never executed
    %%%%%:    8-block 27
    %%%%%:    8-block 28
branch 56 never executed
branch 57 never executed
    %%%%%:    8-block 29
call   58 never executed
    %%%%%:    8-block 30
    %%%%%:    8-block 31
branch 59 never executed
branch 60 never executed
    %%%%%:    8-block 32
call   61 never executed
    %%%%%:    8-block 33
    %%%%%:    8-block 34
branch 62 never executed
branch 63 never executed
    %%%%%:    8-block 35
call   64 never executed
    %%%%%:    8-block 36
    %%%%%:    8-block 37
branch 65 never executed
branch 66 never executed
    %%%%%:    8-block 38
call   67 never executed
       74:    9:           && cantidadCorrectaDeColumnasH(th) && !hayIndividuosSinHogares(ti,th) && !hayHogaresSinIndividuos(ti,th)
       36:    9-block  0
call    0 returned 36
branch  1 taken 36 (fallthrough)
branch  2 taken 0 (throw)
       36:    9-block  1
call    3 returned 36
branch  4 taken 36 (fallthrough)
branch  5 taken 0 (throw)
       36:    9-block  2
branch  6 taken 35 (fallthrough)
branch  7 taken 1
       35:    9-block  3
call    8 returned 35
branch  9 taken 35 (fallthrough)
branch 10 taken 0 (throw)
       35:    9-block  4
call   11 returned 35
branch 12 taken 35 (fallthrough)
branch 13 taken 0 (throw)
       35:    9-block  5
call   14 returned 35
branch 15 taken 35 (fallthrough)
branch 16 taken 0 (throw)
       35:    9-block  6
branch 17 taken 35 (fallthrough)
branch 18 taken 0
       35:    9-block  7
call   19 returned 35
branch 20 taken 35 (fallthrough)
branch 21 taken 0 (throw)
       35:    9-block  8
call   22 returned 35
branch 23 taken 35 (fallthrough)
branch 24 taken 0 (throw)
       35:    9-block  9
call   25 returned 35
branch 26 taken 35 (fallthrough)
branch 27 taken 0 (throw)
       35:    9-block 10
branch 28 taken 35 (fallthrough)
branch 29 taken 0
       38:    9-block 11
branch 30 taken 35 (fallthrough)
branch 31 taken 3
       35:    9-block 12
call   32 returned 35
       38:    9-block 13
branch 33 taken 35 (fallthrough)
branch 34 taken 3
       35:    9-block 14
call   35 returned 35
       38:    9-block 15
branch 36 taken 35 (fallthrough)
branch 37 taken 3
       35:    9-block 16
call   38 returned 35
       38:    9-block 17
branch 39 taken 35 (fallthrough)
branch 40 taken 3
       35:    9-block 18
call   41 returned 35
       38:    9-block 19
branch 42 taken 36 (fallthrough)
branch 43 taken 2
       36:    9-block 20
call   44 returned 36
    %%%%%:    9-block 21
branch 45 never executed
branch 46 never executed
    %%%%%:    9-block 22
call   47 never executed
    %%%%%:    9-block 23
    %%%%%:    9-block 24
branch 48 never executed
branch 49 never executed
    %%%%%:    9-block 25
call   50 never executed
    %%%%%:    9-block 26
    %%%%%:    9-block 27
branch 51 never executed
branch 52 never executed
    %%%%%:    9-block 28
call   53 never executed
    %%%%%:    9-block 29
    %%%%%:    9-block 30
branch 54 never executed
branch 55 never executed
    %%%%%:    9-block 31
call   56 never executed
    %%%%%:    9-block 32
    %%%%%:    9-block 33
branch 57 never executed
branch 58 never executed
    %%%%%:    9-block 34
call   59 never executed
    %%%%%:    9-block 35
       73:   10:           && !hayRepetidosI(ti)&& !hayRepetidosH(th) && mismoAnioYTrimestre(ti,th) && menosDe21MiembrosPorHogar(th,ti)
       35:   10-block  0
call    0 returned 35
branch  1 taken 35 (fallthrough)
branch  2 taken 0 (throw)
       35:   10-block  1
call    3 returned 35
branch  4 taken 35 (fallthrough)
branch  5 taken 0 (throw)
       35:   10-block  2
branch  6 taken 34 (fallthrough)
branch  7 taken 1
       34:   10-block  3
call    8 returned 34
branch  9 taken 34 (fallthrough)
branch 10 taken 0 (throw)
       34:   10-block  4
call   11 returned 34
branch 12 taken 34 (fallthrough)
branch 13 taken 0 (throw)
       34:   10-block  5
branch 14 taken 33 (fallthrough)
branch 15 taken 1
       33:   10-block  6
call   16 returned 33
branch 17 taken 33 (fallthrough)
branch 18 taken 0 (throw)
       33:   10-block  7
call   19 returned 33
branch 20 taken 33 (fallthrough)
branch 21 taken 0 (throw)
       33:   10-block  8
call   22 returned 33
branch 23 taken 33 (fallthrough)
branch 24 taken 0 (throw)
       33:   10-block  9
branch 25 taken 29 (fallthrough)
branch 26 taken 4
       29:   10-block 10
call   27 returned 29
branch 28 taken 29 (fallthrough)
branch 29 taken 0 (throw)
       29:   10-block 11
call   30 returned 29
branch 31 taken 29 (fallthrough)
branch 32 taken 0 (throw)
       29:   10-block 12
call   33 returned 29
branch 34 taken 29 (fallthrough)
branch 35 taken 0 (throw)
       29:   10-block 13
branch 36 taken 29 (fallthrough)
branch 37 taken 0
       38:   10-block 14
branch 38 taken 29 (fallthrough)
branch 39 taken 9
       29:   10-block 15
call   40 returned 29
       38:   10-block 16
branch 41 taken 29 (fallthrough)
branch 42 taken 9
       29:   10-block 17
call   43 returned 29
       38:   10-block 18
branch 44 taken 33 (fallthrough)
branch 45 taken 5
       33:   10-block 19
call   46 returned 33
       38:   10-block 20
branch 47 taken 33 (fallthrough)
branch 48 taken 5
       33:   10-block 21
call   49 returned 33
       38:   10-block 22
branch 50 taken 34 (fallthrough)
branch 51 taken 4
       34:   10-block 23
call   52 returned 34
       38:   10-block 24
branch 53 taken 35 (fallthrough)
branch 54 taken 3
       35:   10-block 25
call   55 returned 35
    %%%%%:   10-block 26
branch 56 never executed
branch 57 never executed
    %%%%%:   10-block 27
call   58 never executed
    %%%%%:   10-block 28
    %%%%%:   10-block 29
branch 59 never executed
branch 60 never executed
    %%%%%:   10-block 30
call   61 never executed
    %%%%%:   10-block 31
    %%%%%:   10-block 32
branch 62 never executed
branch 63 never executed
    %%%%%:   10-block 33
call   64 never executed
    %%%%%:   10-block 34
    %%%%%:   10-block 35
branch 65 never executed
branch 66 never executed
    %%%%%:   10-block 36
call   67 never executed
    %%%%%:   10-block 37
    %%%%%:   10-block 38
branch 68 never executed
branch 69 never executed
    %%%%%:   10-block 39
call   70 never executed
    %%%%%:   10-block 40
    %%%%%:   10-block 41
branch 71 never executed
branch 72 never executed
    %%%%%:   10-block 42
call   73 never executed
    %%%%%:   10-block 43
      152:   11:           && cantidadValidaDormitorios(th) && valoresEnRangoI(ti) && valoresEnRangoH(th);
       38:   11-block  0
branch  0 taken 38 (fallthrough)
branch  1 taken 0
       29:   11-block  1
call    2 returned 29
branch  3 taken 29 (fallthrough)
branch  4 taken 0 (throw)
       29:   11-block  2
call    5 returned 29
branch  6 taken 29 (fallthrough)
branch  7 taken 0 (throw)
       29:   11-block  3
branch  8 taken 29 (fallthrough)
branch  9 taken 0
       29:   11-block  4
call   10 returned 29
branch 11 taken 29 (fallthrough)
branch 12 taken 0 (throw)
       29:   11-block  5
call   13 returned 29
branch 14 taken 29 (fallthrough)
branch 15 taken 0 (throw)
       29:   11-block  6
branch 16 taken 28 (fallthrough)
branch 17 taken 1
       28:   11-block  7
call   18 returned 28
branch 19 taken 28 (fallthrough)
branch 20 taken 0 (throw)
       28:   11-block  8
call   21 returned 28
branch 22 taken 28 (fallthrough)
branch 23 taken 0 (throw)
       28:   11-block  9
branch 24 taken 28 (fallthrough)
branch 25 taken 0
       28:   11-block 10
       10:   11-block 11
       38:   11-block 12
branch 26 taken 28 (fallthrough)
branch 27 taken 10
       28:   11-block 13
call   28 returned 28
       38:   11-block 14
branch 29 taken 29 (fallthrough)
branch 30 taken 9
       29:   11-block 15
call   31 returned 29
       38:   11-block 16
branch 32 taken 29 (fallthrough)
branch 33 taken 9
       29:   11-block 17
call   34 returned 29
    $$$$$:   11-block 18
       38:   11-block 19
       38:   11-block 20
    %%%%%:   11-block 21
branch 35 never executed
branch 36 never executed
    %%%%%:   11-block 22
call   37 never executed
    %%%%%:   11-block 23
    %%%%%:   11-block 24
branch 38 never executed
branch 39 never executed
    %%%%%:   11-block 25
call   40 never executed
    %%%%%:   11-block 26
    %%%%%:   11-block 27
branch 41 never executed
branch 42 never executed
    %%%%%:   11-block 28
call   43 never executed
    %%%%%:   11-block 29
    %%%%%:   11-block 30
    %%%%%:   11-block 31
        -:   12:}
        -:   13:
        -:   14:// Implementacion Problema 2
function _Z16histHabitacionalSt6vectorIS_IiSaIiEESaIS1_EES3_i called 4 returned 100% blocks executed 87%
        4:   15:vector < int > histHabitacional ( eph_h th, eph_i ti, int region ) {
        4:   15-block  0
        4:   16:    vector<int> histograma;
        4:   16-block  0
call    0 returned 4
      311:   17:    for(int i = 0; i < th.size(); i++) {
      311:   17-block  0
call    0 returned 311
branch  1 taken 307 (fallthrough)
branch  2 taken 4
      307:   17-block  1
      307:   18:        if (th[i][REGION] == region) {
      307:   18-block  0
call    0 returned 307
call    1 returned 307
branch  2 taken 63 (fallthrough)
branch  3 taken 244
       83:   19:            while (histograma.size() < th[i][IV2]) {
       83:   19-block  0
call    0 returned 83
call    1 returned 83
call    2 returned 83
branch  3 taken 20 (fallthrough)
branch  4 taken 63
       20:   19-block  1
       20:   20:                histograma.push_back(0);
       20:   20-block  0
call    0 returned 20
branch  1 taken 20 (fallthrough)
branch  2 taken 0 (throw)
    %%%%%:   20-block  1
        -:   21:            }
       63:   22:            if (esCasa(th[i])) {
       63:   22-block  0
call    0 returned 63
call    1 returned 63
branch  2 taken 63 (fallthrough)
branch  3 taken 0 (throw)
       63:   22-block  1
call    4 returned 63
branch  5 taken 63 (fallthrough)
branch  6 taken 0 (throw)
       63:   22-block  2
call    7 returned 63
branch  8 taken 57 (fallthrough)
branch  9 taken 6
    %%%%%:   22-block  3
call   10 never executed
    %%%%%:   22-block  4
call   11 never executed
       57:   23:                histograma[th[i][IV2]-1]++;
       57:   23-block  0
call    0 returned 57
call    1 returned 57
call    2 returned 57
        -:   24:            }
        -:   25:        }
        -:   26:    }
        4:   27:    return histograma;
        4:   27-block  0
        4:   27-block  1
        -:   28:}
        -:   29:
        -:   30:// Implementacion Problema 3
function _Z23laCasaEstaQuedandoChicaSt6vectorIS_IiSaIiEESaIS1_EES3_ called 1 returned 100% blocks executed 79%
        1:   31:vector< pair < int, float > > laCasaEstaQuedandoChica ( eph_h th, eph_i ti ) {
        1:   31-block  0
        -:   32:
        -:   33:    vector<pair<int,float>> resp = {make_pair(1,-1.0),
        -:   34:                                        make_pair(40, -1.0),
        -:   35:                                        make_pair(41, -1.0),
        -:   36:                                        make_pair(42,-1.0),
        -:   37:                                        make_pair(43,-1.0),
        1:   38:                                        make_pair(44,-1.0)};
        1:   38-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   38-block  1
call    4 returned 1
call    5 never executed
        -:   39:
        7:   40:    for(int i = 0; i < resp.size(); i++) {
        7:   40-block  0
call    0 returned 7
branch  1 taken 6 (fallthrough)
branch  2 taken 1
        6:   40-block  1
       42:   41:        for(int j = 0; j < th.size(); j++) {
        6:   41-block  0
       42:   41-block  1
call    0 returned 42
branch  1 taken 36 (fallthrough)
branch  2 taken 6
       36:   41-block  2
       36:   42:            if(th[j][REGION] == resp[i].first) {
       36:   42-block  0
call    0 returned 36
call    1 returned 36
call    2 returned 36
branch  3 taken 6 (fallthrough)
branch  4 taken 30
        6:   43:                resp[i].second = proporcionCasasConHC(th, ti, resp[i].first);
        6:   43-block  0
call    0 returned 6
call    1 returned 6
call    2 returned 6
branch  3 taken 6 (fallthrough)
branch  4 taken 0 (throw)
        6:   43-block  1
call    5 returned 6
branch  6 taken 6 (fallthrough)
branch  7 taken 0 (throw)
        6:   43-block  2
call    8 returned 6
branch  9 taken 6 (fallthrough)
branch 10 taken 0 (throw)
        6:   43-block  3
call   11 returned 6
call   12 returned 6
    %%%%%:   43-block  4
call   13 never executed
    %%%%%:   43-block  5
call   14 never executed
    %%%%%:   43-block  6
call   15 never executed
        -:   44:            }
        -:   45:        }
        -:   46:    }
        -:   47:	
        1:   48:  return resp;
        1:   48-block  0
        1:   48-block  1
    %%%%%:   48-block  2
call    0 never executed
        -:   49:}
        -:   50:
        -:   51:// Implementacion Problema 4
function _Z35creceElTeleworkingEnCiudadesGrandesSt6vectorIS_IiSaIiEESaIS1_EES3_S3_S3_ called 3 returned 100% blocks executed 65%
        3:   52:bool creceElTeleworkingEnCiudadesGrandes (eph_h t1h, eph_i t1i, eph_h t2h, eph_i t2i) {
        3:   52-block  0
        3:   53:    return proporcionTeleworking(t2h,t2i) > proporcionTeleworking(t1h, t1i);
        3:   53-block  0
call    0 returned 3
call    1 returned 3
branch  2 taken 3 (fallthrough)
branch  3 taken 0 (throw)
        3:   53-block  1
call    4 returned 3
branch  5 taken 3 (fallthrough)
branch  6 taken 0 (throw)
        3:   53-block  2
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
        3:   53-block  3
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
        3:   53-block  4
call   13 returned 3
branch 14 taken 3 (fallthrough)
branch 15 taken 0 (throw)
        3:   53-block  5
call   16 returned 3
call   17 returned 3
call   18 returned 3
call   19 returned 3
        3:   53-block  6
    %%%%%:   53-block  7
call   20 never executed
    %%%%%:   53-block  8
call   21 never executed
    %%%%%:   53-block  9
call   22 never executed
    %%%%%:   53-block 10
call   23 never executed
        -:   54:}
        -:   55:
        -:   56:// Implementacion Problema 5
function _Z19costoSubsidioMejoraSt6vectorIS_IiSaIiEESaIS1_EES3_i called 2 returned 100% blocks executed 95%
        2:   57:int costoSubsidioMejora(eph_h th , eph_i ti, int monto){
        2:   57-block  0
        2:   58:    int resp = 0;
        2:   59:    int codusu = 0;
        2:   60:    int cantDeHabitaciones = 0;
       10:   61:    for(int i = 0; i< th.size() ;i++){
        2:   61-block  0
       10:   61-block  1
call    0 returned 10
branch  1 taken 8 (fallthrough)
branch  2 taken 2
        8:   61-block  2
        8:   62:        codusu = th[i][HOGCODUSU];
        8:   62-block  0
call    0 returned 8
call    1 returned 8
        8:   63:        cantDeHabitaciones = th[i][IV2];
call    0 returned 8
call    1 returned 8
        8:   64:        if(th[i][II7] == 1){
call    0 returned 8
call    1 returned 8
branch  2 taken 4 (fallthrough)
branch  3 taken 4
        4:   65:            int cantHab = 0;
        4:   66:            cantHab = cantidadHabitantes(codusu, ti);
        4:   66-block  0
call    0 returned 4
call    1 returned 4
branch  2 taken 4 (fallthrough)
branch  3 taken 0 (throw)
        4:   66-block  1
call    4 returned 4
    %%%%%:   66-block  2
call    5 never executed
        4:   67:            if((cantHab - 2) > cantDeHabitaciones){
branch  0 taken 2 (fallthrough)
branch  1 taken 2
        2:   68:                resp += monto;
        2:   68-block  0
        -:   69:            }
        4:   70:            cantHab = 0;
        4:   70-block  0
        -:   71:        }
        8:   72:        codusu = 0;
        8:   73:        cantDeHabitaciones = 0;
        -:   74:    }
        2:   75:    return resp;
        2:   75-block  0
        2:   75-block  1
        -:   76:}
        -:   77:
        -:   78:// Implementacion Problema 6
function _Z11generarJoinSt6vectorIS_IiSaIiEESaIS1_EES3_ called 1 returned 100% blocks executed 74%
        1:   79:join_hi generarJoin( eph_h th, eph_i ti ){
        1:   79-block  0
        1:   80:    join_hi resp;
        1:   80-block  0
call    0 returned 1
        2:   81:    vector<pair<vector<dato>, vector<dato>>> temp;
call    0 returned 1
        1:   81-block  0
call    1 returned 1
    %%%%%:   81-block  1
call    2 never executed
    %%%%%:   81-block  2
call    3 never executed
        5:   82:    for(int k=0; k<th.size(); k++){
        5:   82-block  0
call    0 returned 5
branch  1 taken 4 (fallthrough)
branch  2 taken 1
        4:   82-block  1
       36:   83:        for(int j=0; j<ti.size(); j++){
        4:   83-block  0
       36:   83-block  1
call    0 returned 36
branch  1 taken 32 (fallthrough)
branch  2 taken 4
       32:   83-block  2
       32:   84:            if(esSuHogar(th[k],ti[j])){
       32:   84-block  0
call    0 returned 32
call    1 returned 32
branch  2 taken 32 (fallthrough)
branch  3 taken 0 (throw)
       32:   84-block  1
call    4 returned 32
call    5 returned 32
branch  6 taken 32 (fallthrough)
branch  7 taken 0 (throw)
       32:   84-block  2
call    8 returned 32
branch  9 taken 32 (fallthrough)
branch 10 taken 0 (throw)
       32:   84-block  3
call   11 returned 32
call   12 returned 32
branch 13 taken 8 (fallthrough)
branch 14 taken 24
    %%%%%:   84-block  4
call   15 never executed
    %%%%%:   84-block  5
call   16 never executed
        8:   85:                resp.push_back(make_pair(th[k],ti[j]));
        8:   85-block  0
call    0 returned 8
call    1 returned 8
call    2 returned 8
branch  3 taken 8 (fallthrough)
branch  4 taken 0 (throw)
        8:   85-block  1
call    5 returned 8
branch  6 taken 8 (fallthrough)
branch  7 taken 0 (throw)
        8:   85-block  2
call    8 returned 8
    %%%%%:   85-block  3
call    9 never executed
        -:   86:            }
        -:   87:        }
        -:   88:    }
        2:   89:    return  resp;
        1:   89-block  0
        1:   89-block  1
        -:   90:}
        -:   91:
        -:   92:// Implementacion Problema 7
function _Z20ordenarRegionYCODUSURSt6vectorIS_IiSaIiEESaIS1_EES4_ called 1 returned 100% blocks executed 100%
        1:   93:void ordenarRegionYCODUSU (eph_h & th, eph_i & ti) {
        1:   93-block  0
        1:   94:    ordenarPorRegion(th);
        1:   94-block  0
call    0 returned 1
        1:   95:    ordenarPorCODUSUYRegion(th);
call    0 returned 1
        1:   96:    ordenarIndividuosPorCODUSUDeHogar(th,ti);
call    0 returned 1
        1:   97:    ordenarIndividuosPorComponente(ti);
call    0 returned 1
        1:   98:    return;
        -:   99:}
        -:  100:
        -:  101:// Implementación Problema 8
function _Z16muestraHomogeneaRSt6vectorIS_IiSaIiEESaIS1_EES4_ called 2 returned 100% blocks executed 60%
        2:  102:vector < hogar > muestraHomogenea( eph_h & th, eph_i & ti ) {
        2:  102-block  0
        2:  103:    vector<hogar> res;
        2:  103-block  0
call    0 returned 2
        2:  104:    ordenarPorIngresos(th,ti);
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:  104-block  0
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
        2:  104-block  1
call    6 returned 2
    %%%%%:  104-block  2
call    7 never executed
        2:  105:    th = sacarRepetidos(th,ti);
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:  105-block  0
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
        2:  105-block  1
call    6 returned 2
branch  7 taken 2 (fallthrough)
branch  8 taken 0 (throw)
        2:  105-block  2
call    9 returned 2
call   10 returned 2
call   11 returned 2
call   12 returned 2
    %%%%%:  105-block  3
call   13 never executed
    %%%%%:  105-block  4
call   14 never executed
    %%%%%:  105-block  5
call   15 never executed
        4:  106:    vector<int> diferencias = buscarDiferencias(th,ti);
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:  106-block  0
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
        2:  106-block  1
call    6 returned 2
branch  7 taken 2 (fallthrough)
branch  8 taken 0 (throw)
        2:  106-block  2
call    9 returned 2
call   10 returned 2
        2:  106-block  3
call   11 returned 2
    %%%%%:  106-block  4
call   12 never executed
    %%%%%:  106-block  5
call   13 never executed
    %%%%%:  106-block  6
call   14 never executed
        2:  107:    res = listaHogaresConMismaDiferencia(th,ti,diferencias);
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:  107-block  0
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
        2:  107-block  1
call    6 returned 2
branch  7 taken 2 (fallthrough)
branch  8 taken 0 (throw)
        2:  107-block  2
call    9 returned 2
branch 10 taken 2 (fallthrough)
branch 11 taken 0 (throw)
        2:  107-block  3
call   12 returned 2
call   13 returned 2
call   14 returned 2
call   15 returned 2
call   16 returned 2
    %%%%%:  107-block  4
call   17 never executed
    %%%%%:  107-block  5
call   18 never executed
    %%%%%:  107-block  6
call   19 never executed
        4:  108:    return res;
        2:  108-block  0
        -:  109:}
        -:  110:
        -:  111:// Implementacion Problema 9
function _Z14corregirRegionRSt6vectorIS_IiSaIiEESaIS1_EES3_ called 1 returned 100% blocks executed 100%
        1:  112:void corregirRegion( eph_h & th, eph_i ti ) {
        1:  112-block  0
        5:  113:    for (int i = 0; i < th.size(); i++) {
        1:  113-block  0
        5:  113-block  1
call    0 returned 5
branch  1 taken 4 (fallthrough)
branch  2 taken 1
        4:  113-block  2
        4:  114:        if(th[i][REGION] == 1) {
        4:  114-block  0
call    0 returned 4
call    1 returned 4
branch  2 taken 2 (fallthrough)
branch  3 taken 2
       26:  115:            for (int k = 0; k < th[i].size(); k++) {
        2:  115-block  0
       26:  115-block  1
call    0 returned 26
call    1 returned 26
branch  2 taken 24 (fallthrough)
branch  3 taken 2
       24:  115-block  2
        2:  115-block  3
       24:  116:                if (k == 6) {
       24:  116-block  0
branch  0 taken 2 (fallthrough)
branch  1 taken 22
        2:  117:                    th[i][k] = 43;
        2:  117-block  0
call    0 returned 2
call    1 returned 2
        -:  118:                } else {
       22:  119:                    th[i][k] = th[i][k];
       22:  119-block  0
call    0 returned 22
call    1 returned 22
call    2 returned 22
call    3 returned 22
        -:  120:                }
        -:  121:            }
        -:  122:        }
        -:  123:    }
        -:  124:
        1:  125:    return;
        1:  125-block  0
        -:  126:}
        -:  127:
        -:  128:// Implementacion Problema 10
function _Z31histogramaDeAnillosConcentricosSt6vectorIS_IiSaIiEESaIS1_EES3_St4pairIiiES1_ called 2 returned 100% blocks executed 79%
        2:  129:vector < int > histogramaDeAnillosConcentricos( eph_h th, eph_i ti, pair < int, int > centro, vector < int > distancias ){
        2:  129-block  0
        2:  130:	vector<int> resp(distancias.size());
        2:  130-block  0
call    0 returned 2
call    1 returned 2
call    2 returned 2
branch  3 taken 2 (fallthrough)
branch  4 taken 0 (throw)
        2:  130-block  1
call    5 returned 2
call    6 never executed
       10:  131:    for(int x = 0; x < distancias.size(); ++x) {
       10:  131-block  0
call    0 returned 10
branch  1 taken 8 (fallthrough)
branch  2 taken 2
        8:  132:        resp[x] = 0;
        8:  132-block  0
call    0 returned 8
        -:  133:    }
        2:  134:    resp[0] = cantidadHogaresEnAnillo(0, distancias[0], centro, th);
        2:  134-block  0
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
        2:  134-block  1
call    4 returned 2
call    5 returned 2
branch  6 taken 2 (fallthrough)
branch  7 taken 0 (throw)
        2:  134-block  2
call    8 returned 2
    %%%%%:  134-block  3
call    9 never executed
        8:  135:    for(int i = 0; i < distancias.size() - 1; i++) {
        8:  135-block  0
call    0 returned 8
branch  1 taken 6 (fallthrough)
branch  2 taken 2
        6:  136:        resp[i+1] = cantidadHogaresEnAnillo(distancias[i], distancias[i+1], centro, th);
        6:  136-block  0
call    0 returned 6
call    1 returned 6
branch  2 taken 6 (fallthrough)
branch  3 taken 0 (throw)
        6:  136-block  1
call    4 returned 6
call    5 returned 6
call    6 returned 6
branch  7 taken 6 (fallthrough)
branch  8 taken 0 (throw)
        6:  136-block  2
call    9 returned 6
    %%%%%:  136-block  3
call   10 never executed
    %%%%%:  136-block  4
call   11 never executed
        -:  137:    }
        -:  138:	
        2:  139:	return resp;
        2:  139-block  0
        2:  139-block  1
    %%%%%:  139-block  2
call    0 never executed
        -:  140:}
        -:  141:
        -:  142:// Implementacion Problema 11
function _Z16quitarIndividuosRSt6vectorIS_IiSaIiEESaIS1_EES4_S_ISt4pairIiiESaIS6_EE called 2 returned 100% blocks executed 89%
        2:  143:pair < eph_h, eph_i > quitarIndividuos(eph_i & ti, eph_h & th, vector < pair < int, dato > >  busqueda ){
        2:  143-block  0
        4:  144:    eph_h th_out;
        2:  144-block  0
call    0 returned 2
call    1 returned 2
    %%%%%:  144-block  1
call    2 never executed
        4:  145:    eph_i ti_out;
call    0 returned 2
call    1 returned 2
    %%%%%:  145-block  0
call    2 never executed
        4:  146:    eph_h th_res;
call    0 returned 2
call    1 returned 2
    %%%%%:  146-block  0
call    2 never executed
        4:  147:    eph_i ti_res;
call    0 returned 2
call    1 returned 2
    %%%%%:  147-block  0
call    2 never executed
        -:  148:
       18:  149:    for(int ind=0; ind<ti.size(); ind++){
       18:  149-block  0
call    0 returned 18
branch  1 taken 16 (fallthrough)
branch  2 taken 2
       16:  149-block  1
       16:  150:        if(cumpleCondicion(ti[ind], busqueda)){
       16:  150-block  0
call    0 returned 16
call    1 returned 16
branch  2 taken 16 (fallthrough)
branch  3 taken 0 (throw)
       16:  150-block  1
branch  4 taken 7 (fallthrough)
branch  5 taken 9
        7:  151:            ti_res.push_back(ti[ind]);
        7:  151-block  0
call    0 returned 7
call    1 returned 7
branch  2 taken 7 (fallthrough)
branch  3 taken 0 (throw)
        7:  151-block  1
        -:  152:        } else {
        9:  153:            ti_out.push_back(ti[ind]);
        9:  153-block  0
call    0 returned 9
call    1 returned 9
branch  2 taken 9 (fallthrough)
branch  3 taken 0 (throw)
        -:  154:        }
        -:  155:    }
        -:  156:
        2:  157:    int codusu_aux = 0;
        9:  158:    for(int i=0; i<ti_res.size(); i++){
        2:  158-block  0
        9:  158-block  1
call    0 returned 9
branch  1 taken 7 (fallthrough)
branch  2 taken 2
        7:  158-block  2
       21:  159:        for(int j=0; j<th.size(); j++){
        7:  159-block  0
       21:  159-block  1
call    0 returned 21
branch  1 taken 14 (fallthrough)
branch  2 taken 7
       14:  159-block  2
       14:  160:            if(ti_res[i][INDCODUSU] == th[j][HOGCODUSU] && th[j][HOGCODUSU] != codusu_aux){
       14:  160-block  0
call    0 returned 14
call    1 returned 14
call    2 returned 14
call    3 returned 14
branch  4 taken 7 (fallthrough)
branch  5 taken 7
        7:  160-block  1
call    6 returned 7
call    7 returned 7
branch  8 taken 2 (fallthrough)
branch  9 taken 5
        2:  160-block  2
       12:  160-block  3
       14:  160-block  4
branch 10 taken 2 (fallthrough)
branch 11 taken 12
        2:  161:                codusu_aux = th[j][HOGCODUSU];
        2:  161-block  0
call    0 returned 2
call    1 returned 2
        2:  162:                th_res.push_back(th[j]);
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
        2:  162-block  0
        -:  163:            }
        -:  164:        }
        -:  165:    }
        -:  166:
        4:  167:    vector<int> hogar_aux= {};
        2:  167-block  0
call    0 returned 2
        2:  167-block  1
call    1 returned 2
    %%%%%:  167-block  2
call    2 never executed
       11:  168:    for(int i=0; i<ti_out.size(); i++){
       11:  168-block  0
call    0 returned 11
branch  1 taken 9 (fallthrough)
branch  2 taken 2
        9:  168-block  1
       27:  169:        for(int j=0; j<th.size(); j++){
        9:  169-block  0
       27:  169-block  1
call    0 returned 27
branch  1 taken 18 (fallthrough)
branch  2 taken 9
       18:  169-block  2
       18:  170:            if(ti_out[i][INDCODUSU] == th[j][HOGCODUSU] && th[j] !=  hogar_aux ){
       18:  170-block  0
call    0 returned 18
call    1 returned 18
call    2 returned 18
call    3 returned 18
branch  4 taken 9 (fallthrough)
branch  5 taken 9
        9:  170-block  1
call    6 returned 9
call    7 returned 9
branch  8 taken 9 (fallthrough)
branch  9 taken 0 (throw)
        9:  170-block  2
branch 10 taken 3 (fallthrough)
branch 11 taken 6
        3:  170-block  3
       15:  170-block  4
       18:  170-block  5
branch 12 taken 3 (fallthrough)
branch 13 taken 15
        3:  171:                    hogar_aux = th[j];
        3:  171-block  0
call    0 returned 3
call    1 returned 3
branch  2 taken 3 (fallthrough)
branch  3 taken 0 (throw)
        3:  172:                    th_out.push_back(th[j]);
        3:  172-block  0
call    0 returned 3
call    1 returned 3
branch  2 taken 3 (fallthrough)
branch  3 taken 0 (throw)
        3:  172-block  1
        -:  173:                }
        -:  174:        }
        -:  175:    }
        -:  176:
        2:  177:    th = th_out;
        2:  177-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:  178:    ti = ti_out;
        2:  178-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        4:  179:    return make_pair(th_res, ti_res);
        2:  179-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:  179-block  1
        2:  179-block  2
function _GLOBAL__sub_I__Z16esEncuestaValidaSt6vectorIS_IiSaIiEESaIS1_EES3_ called 1 returned 100% blocks executed 100%
function _Z41__static_initialization_and_destruction_0ii called 1 returned 100% blocks executed 100%
        4:  180:}
        1:  180-block  0
        1:  180-block  1
call    0 returned 1
        1:  180-block  2
        1:  180-block  3
branch  1 taken 1 (fallthrough)
branch  2 taken 0
        1:  180-block  4
branch  3 taken 1 (fallthrough)
branch  4 taken 0
